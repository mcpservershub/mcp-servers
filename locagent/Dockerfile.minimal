# Minimal MCP Server without PyTorch (much smaller image)
FROM python:3.12-slim AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy pyproject.toml and README.md first
COPY pyproject.toml README.md ./

# Install minimal dependencies (excluding torch and pandas for smaller image)
RUN pip install --no-cache-dir fastmcp click pydantic networkx matplotlib tree-sitter tree-sitter-languages libcst \
    llama-index-core llama-index-retrievers-bm25 llama-index-readers-file llama-index-embeddings-azure-openai \
    llama-index-embeddings-openai PyStemmer rapidfuzz faiss-cpu numpy datasets requests tqdm PyYAML Jinja2 \
    pandas

# Copy source code
COPY src ./src
COPY plugins ./plugins
COPY dependency_graph ./dependency_graph
COPY repo_index ./repo_index
COPY util ./util

# Create virtual environment
RUN python -m venv /app/venv

# Activate venv and install dependencies (without PyTorch for minimal build)
RUN /app/venv/bin/pip install --no-cache-dir fastmcp click pydantic networkx matplotlib tree-sitter tree-sitter-languages libcst \
    llama-index-core llama-index-retrievers-bm25 llama-index-readers-file llama-index-embeddings-azure-openai \
    llama-index-embeddings-openai PyStemmer rapidfuzz faiss-cpu numpy datasets requests tqdm PyYAML Jinja2 \
    pandas

# Install the package in development mode
RUN /app/venv/bin/pip install --no-cache-dir -e .

# Copy entrypoint script and set permissions (before user switch)
COPY docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

# Create a non-root user
RUN useradd -m -s /bin/bash mcpuser && \
    chown -R mcpuser:mcpuser /app

# Switch to non-root user
USER mcpuser

# Create required directories
RUN mkdir -p /app/graph_index /app/bm25_index /app/playground

# Set environment variables
ENV PYTHONPATH="/app/src:/app"
ENV PYTHONUNBUFFERED=1
ENV GRAPH_INDEX_DIR="/app/graph_index"
ENV BM25_INDEX_DIR="/app/bm25_index"
ENV PATH="/app/venv/bin:$PATH"

# Expose port for MCP server
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD /app/venv/bin/python -c "from mcp_server.server import app; print('Server healthy')" || exit 1

# Default command
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["--log-level", "INFO"]