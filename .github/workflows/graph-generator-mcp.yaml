name: Build & Push graph-generator-mcp Docker Image

on:
  push:
    branches:
      - main
    paths:
      - "graph-generator-mcp/**"
  pull_request:
    branches:
      - main
    paths:
      - "graph-generator-mcp/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      PROJECT_NAME: graph-generator-mcp
      PROJECT_PATH: graph-generator-mcp
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository_owner }}/graph-generator-mcp

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}
          tags: |
            type=sha,format=short
        # will generate tags output like "<short SHA>"

      - name: Set up QEMU (optional for multi-platform)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: ${{ env.PROJECT_PATH }}
          file: ${{ env.PROJECT_PATH }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: "v2.5.3"

      - name: Sign the images with GitHub OIDC Token
        if: github.event_name != 'pull_request'
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
